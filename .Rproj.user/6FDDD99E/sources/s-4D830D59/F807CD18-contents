pretty_print_updates <- function(old, new) {
  # create data frame with old and new preferences -----------------------------
  df_updates <-
    # data frame of old prefs
    tibble::tibble(
      pref = names(old) %>% intersect(names(new)),
      old_value = old[names(new)] %>% unname() %>% lapply(as.character) %>% unlist()
    ) %>%
    dplyr::full_join(
      # data frame of new prefs
      tibble::tibble(
        pref = names(new),
        new_value = new  %>% unname() %>% lapply(as.character) %>% unlist()
      ),
      by = "pref"
    ) %>%
    dplyr::mutate(
      old_value = ifelse(is.na(old_value), "*", old_value),
      new_value = ifelse(is.na(new_value), "*", new_value)
    )

  # pad each column with trailing spaces ---------------------------------------
  length_total <- df_updates %>% lapply(function(x) nchar(x) %>% max() + 1L)
  for (i in seq_len(nrow(df_updates))) {
    for (col in names(df_updates)) {
      df_updates[i, col] <-
        paste0(
          df_updates[i, col],
          rep_len(" ", length_total[[col]] - nchar(df_updates[i, col])) %>%
            paste(collapse = "")
        )
    }
  }

  # print updates --------------------------------------------------------------
  df_updates %>%
    dplyr::mutate(message = paste0(pref, ": ", old_value, " --> ", new_value)) %>%
    dplyr::pull(.data$message) %>%
    paste(collapse = "\n") %>%
    cat()
}







